plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.18'
    id "io.freefair.lombok" version "5.0.0"
    id 'idea'
    id "org.sonarqube" version "2.8"
    id 'jacoco'
}

group 'org.codinjutsu'
version '0.13.2-2020.1'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_11

intellij {
    version 'LATEST-EAP-SNAPSHOT'
//    version '2020.1'
    plugins 'java'
    updateSinceUntilBuild false
    pluginName 'jenkins-control-plugin'
}

lombok {
    version = "1.18.12"
    generateLombokConfig.enabled = false
}

idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

patchPluginXml {
    version "${project.version}"
    pluginDescription (file('includes/pluginDescription.html').text)
    changeNotes (file('includes/pluginChanges.html').text)
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    provided
}

sourceSets {
    main {
        java {
            compileClasspath += configurations.provided
            runtimeClasspath += configurations.provided
        }
        resources {
        }
    }
    test {
        java {
            compileClasspath += configurations.provided
            runtimeClasspath += configurations.provided
        }
        resources {
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://www.jetbrains.com/intellij-repository/snapshots' }
}

dependencies {
    implementation ('com.github.cliftonlabs:json-simple:3.1.1') {
        exclude group: 'junit'
    }
    implementation('com.offbytwo.jenkins:jenkins-client:0.3.8') {
        exclude group: 'org.slf4j'
        exclude group: 'org.apache.logging.log4j'
    }

    testImplementation(
            'junit:junit:4.13',
            'org.mockito:mockito-core:3.3.3',
            'org.powermock:powermock-api-mockito2:2.0.5',
            'org.powermock:powermock-core:2.0.5',
            'org.assertj:assertj-core:3.15.0',
            'org.assertj:assertj-swing-junit:3.9.2'
    )
}

test {
    jvmArgs '-enableassertions', '-Djava.awt.headless=true'
    doFirst {
        systemProperty("idea.plugins.path", project.rootDir.canonicalPath + "/.test-plugins")
    }
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

runIde {
    //jvmArgs '-Djava.awt.headless=true'
}

buildPlugin {
    doLast {
        copy {
            from 'build/distributions'
            include "${intellij.pluginName}-${project.version}.zip"
            into "snapshot"
        }
    }
}

prepareSandbox {
    from (['README.md', 'CHANGELOG.txt', 'LICENSE.txt']) {
        into "${intellij.pluginName}/"
    }
}

sonarqube {
    properties {
        //property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectKey", "MCMicS_jenkins-control-plugin"
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}
